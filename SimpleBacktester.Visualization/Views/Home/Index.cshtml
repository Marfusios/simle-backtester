@using SimpleBacktester.Visualization
<!DOCTYPE HTML>
<html>
<head>

    <title>TradingView Charting Library demo</title>

    <!-- Fix for iOS Safari zooming bug -->
    <meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">

    <script type="text/javascript" src="charting_library/charting_library.min.js"></script>
    <script type="text/javascript" src="datafeeds/udf/dist/polyfills.js"></script>
    <script type="text/javascript" src="datafeeds/udf/dist/bundle.js"></script>

    <script type="text/javascript">

        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);
            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }

        function initOnReady() {
            var widget = window.tvWidget = new TradingView.widget({
                debug: true, // uncomment this line to see Library errors and warnings in the console
                fullscreen: true,
                symbol: '@MyTvProvider.DefaultSymbol',
                interval: '1',
                //interval: '1D',
                container_id: "tv_chart_container",

                // BEWARE: no trailing slash is expected in feed URL
                //datafeed: new Datafeeds.UDFCompatibleDatafeed("https://demo_feed.tradingview.com"),
                datafeed: new Datafeeds.UDFCompatibleDatafeed("https://localhost:5001/api/trading-view/udf"),
                library_path: "charting_library/",
                locale: getParameterByName('lang') || "en",

                disabled_features: ["use_localstorage_for_settings"],
                enabled_features: ["study_templates"],
                charts_storage_url: 'https://saveload.tradingview.com',
                charts_storage_api_version: "1.1",
                client_id: 'tradingview.dotnet',
                user_id: 'public_user_id',
                theme: getParameterByName('theme'),
                custom_indicators_getter: function (PineJS) {
                    return Promise.resolve([

                        {
                            name: "Buys",
                            metainfo: {
                                "_metainfoVersion": 40,
                                "id": "Buys@@tv-basicstudies-1",
                                "scriptIdPart": "",
                                "name": "Buys",
                                "description": "Buys",
                                "shortDescription": "Buys",
                                "is_hidden_study": false,
                                "is_price_study": true,
                                "isCustomIndicator": true,

                                "plots": [{ "id": "plot_0", "type": "shapes" }],
                                "defaults": {
                                    "styles": {
                                        "plot_0": {
                                            visible: true,
                                            plottype: 'shape_arrow_up',
                                            location: 'BelowBar',
                                            trackPrice: false,
                                            transparency: 1,
                                            color: "green",
                                            //size: "huge"
                                        }
                                    },
                                    "precision": 2,
                                    "inputs": {}
                                },
                                "styles": {
                                    "plot_0": {
                                        "title": "Buys",
                                        "histogramBase": 0
                                    }
                                },
                                "inputs": []
                            },

                            constructor: function () {
                                this.init = function (context, inputCallback) {
                                    this._context = context;
                                    this._input = inputCallback;
                                    var info = widget.symbolInterval();
                                    var symbol = 'trades__buys__' + info.symbol;
                                    this._context.new_sym(symbol, PineJS.Std.period(this._context), PineJS.Std.period(this._context));
                                };

                                this.main = function (context, inputCallback) {
                                    this._context = context;
                                    this._input = inputCallback;
                                    this._context.select_sym(1);
                                    var v = PineJS.Std.close(this._context);
                                    return [v];
                                }
                            }
                        },
                        {
                            name: "Sells",
                            metainfo: {
                                "_metainfoVersion": 40,
                                "id": "Sells@@tv-basicstudies-1",
                                "scriptIdPart": "",
                                "name": "Sells",
                                "description": "Sells",
                                "shortDescription": "Sells",
                                "is_hidden_study": false,
                                "is_price_study": true,
                                "isCustomIndicator": true,

                                "plots": [{ "id": "plot_0", "type": "shapes" }],
                                "defaults": {
                                    "styles": {
                                        "plot_0": {
                                            visible: true,
                                            plottype: 'shape_arrow_down',
                                            location: 'AboveBar',
                                            trackPrice: true,
                                            transparency: 1,
                                            color: "red",
                                            //size: "huge"
                                        }
                                    },
                                    "precision": 2,
                                    "inputs": {}
                                },
                                "styles": {
                                    "plot_0": {
                                        "title": "Sells",
                                        "histogramBase": 0
                                    }
                                },
                                "inputs": []
                            },

                            constructor: function () {
                                this.init = function (context, inputCallback) {
                                    this._context = context;
                                    this._input = inputCallback;
                                    var info = widget.symbolInterval();
                                    var symbol = 'trades__sells__' + info.symbol;
                                    this._context.new_sym(symbol, PineJS.Std.period(this._context), PineJS.Std.period(this._context));
                                };

                                this.main = function (context, inputCallback) {
                                    this._context = context;
                                    this._input = inputCallback;
                                    this._context.select_sym(1);
                                    var v = PineJS.Std.close(this._context);
                                    return [v];
                                }
                            }
                        }

                    ]);
                }
            });

            //widget.onChartReady(function () {
            //    widget.chart().createStudy('Buys', false, true);
            //    widget.chart().createStudy('Sells', false, true);
            //});
        };

        window.addEventListener('DOMContentLoaded', initOnReady, false);
    </script>

</head>

<body style="margin:0px;">
<div id="tv_chart_container"></div>
</body>

</html>